%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.6.0.324 (R2008a). Operating System: Microsoft Windows XP.
%%Title: C:\Documents and Settings\Administrator\×ÀÃæ\fig\fig02.eps
%%CreationDate: 09/23/2008  18:16:36
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    51   239   542   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   239   542   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0612 7224 csm

    0     0  5900  4349 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5901 4350 rf
6 w
0 3545 4573 0 0 -3545 767 3871 4 MP
PP
-4573 0 0 3545 4573 0 0 -3545 767 3871 5 MP stroke
4 w
DO
0 sg
 767 3871 mt  767  326 L
 767  326 mt  767  326 L
1420 3871 mt 1420  326 L
1420  326 mt 1420  326 L
2073 3871 mt 2073  326 L
2073  326 mt 2073  326 L
2726 3871 mt 2726  326 L
2726  326 mt 2726  326 L
3380 3871 mt 3380  326 L
3380  326 mt 3380  326 L
4033 3871 mt 4033  326 L
4033  326 mt 4033  326 L
4686 3871 mt 4686  326 L
4686  326 mt 4686  326 L
5340 3871 mt 5340  326 L
5340  326 mt 5340  326 L
 767 3871 mt 5340 3871 L
5340 3871 mt 5340 3871 L
 767 3477 mt 5340 3477 L
5340 3477 mt 5340 3477 L
 767 3083 mt 5340 3083 L
5340 3083 mt 5340 3083 L
 767 2689 mt 5340 2689 L
5340 2689 mt 5340 2689 L
 767 2295 mt 5340 2295 L
5340 2295 mt 5340 2295 L
 767 1901 mt 5340 1901 L
5340 1901 mt 5340 1901 L
 767 1507 mt 5340 1507 L
5340 1507 mt 5340 1507 L
 767 1113 mt 5340 1113 L
5340 1113 mt 5340 1113 L
 767  719 mt 5340  719 L
5340  719 mt 5340  719 L
 767  326 mt 5340  326 L
5340  326 mt 5340  326 L
SO
6 w
 767  326 mt 5340  326 L
 767 3871 mt 5340 3871 L
5340 3871 mt 5340  326 L
 767 3871 mt  767  326 L
 767 3871 mt 5340 3871 L
 767 3871 mt  767  326 L
 767 3871 mt  767 3825 L
 767  326 mt  767  371 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 634 4016 mt 
(1970) s
1420 3871 mt 1420 3825 L
1420  326 mt 1420  371 L
1287 4016 mt 
(1980) s
2073 3871 mt 2073 3825 L
2073  326 mt 2073  371 L
1940 4016 mt 
(1990) s
2726 3871 mt 2726 3825 L
2726  326 mt 2726  371 L
2593 4016 mt 
(2000) s
3380 3871 mt 3380 3825 L
3380  326 mt 3380  371 L
3247 4016 mt 
(2010) s
4033 3871 mt 4033 3825 L
4033  326 mt 4033  371 L
3900 4016 mt 
(2020) s
4686 3871 mt 4686 3825 L
4686  326 mt 4686  371 L
4553 4016 mt 
(2030) s
5340 3871 mt 5340 3825 L
5340  326 mt 5340  371 L
5207 4016 mt 
(2040) s
 767 3871 mt  812 3871 L
5340 3871 mt 5294 3871 L
 666 3915 mt 
(4) s
 767 3477 mt  812 3477 L
5340 3477 mt 5294 3477 L
 666 3521 mt 
(5) s
 767 3083 mt  812 3083 L
5340 3083 mt 5294 3083 L
 666 3127 mt 
(6) s
 767 2689 mt  812 2689 L
5340 2689 mt 5294 2689 L
 666 2733 mt 
(7) s
 767 2295 mt  812 2295 L
5340 2295 mt 5294 2295 L
 666 2339 mt 
(8) s
 767 1901 mt  812 1901 L
5340 1901 mt 5294 1901 L
 666 1945 mt 
(9) s
 767 1507 mt  812 1507 L
5340 1507 mt 5294 1507 L
 599 1551 mt 
(10) s
 767 1113 mt  812 1113 L
5340 1113 mt 5294 1113 L
 599 1157 mt 
(11) s
 767  719 mt  812  719 L
5340  719 mt 5294  719 L
 599  763 mt 
(12) s
 767  326 mt  812  326 L
5340  326 mt 5294  326 L
 599  370 mt 
(13) s
 767  272 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

 993  198 mt 
(4) s
 767  326 mt 5340  326 L
 767 3871 mt 5340 3871 L
5340 3871 mt 5340  326 L
 767 3871 mt  767  326 L
gs 767 326 4574 3546 rc
24 w
gr

24 w
56 W
787 3596 PD
56 W
838 3491 PD
56 W
902 3342 PD
56 W
962 3176 PD
56 W
1027 3188 PD
56 W
1096 3219 PD
56 W
1170 3089 PD
56 W
1225 3003 PD
56 W
1290 2904 PD
56 W
1350 2867 PD
56 W
1428 2947 PD
56 W
1483 3027 PD
56 W
1539 3077 PD
56 W
1612 3120 PD
56 W
1677 3065 PD
56 W
1755 3058 PD
56 W
1811 3003 PD
56 W
1871 2953 PD
56 W
1940 2879 PD
56 W
1995 2824 PD
56 W
2078 2817 PD
56 W
2138 2793 PD
56 W
2207 2774 PD
56 W
2267 2768 PD
56 W
2332 2731 PD
56 W
2410 2675 PD
56 W
2465 2614 PD
56 W
2525 2540 PD
56 W
2590 2521 PD
56 W
2650 2441 PD
56 W
2723 2398 PD
56 W
2788 2348 PD
56 W
2857 2342 PD
56 W
2917 2286 PD
gs 767 326 4574 3546 rc
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
447 -352 355 -265 622 -426 885 -525 3005 2286 5 MP stroke
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
1147 -537 1084 -494 3092 2286 3 MP stroke
/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
2356 -6 2963 2299 2 MP stroke
gr

c10
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 156 FMSR

2902 4185 mt 
(year) s
 509 2680 mt  -90 rotate
(thousand barrels) s
90 rotate
2193  223 mt 
(thousand barrels per day) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 750 3914 mt 
( ) s
5324  368 mt 
( ) s
gs 767 326 4574 3546 rc
60 -56 69 -6 65 -50 73 -43 60 -80 65 -19 60 -74 55 -61 
78 -56 65 -37 60 -6 69 -19 60 -24 83 -7 55 -55 69 -74 
60 -50 56 -55 78 -7 65 -55 73 43 56 50 55 80 78 80 
60 -37 65 -99 55 -86 74 -130 69 31 65 12 60 -166 64 -149 
51 -105 787 3596 34 MP stroke
gr

52 W
787 3596 PD
52 W
838 3491 PD
52 W
902 3342 PD
52 W
962 3176 PD
52 W
1027 3188 PD
52 W
1096 3219 PD
52 W
1170 3089 PD
52 W
1225 3003 PD
52 W
1290 2904 PD
52 W
1350 2867 PD
52 W
1428 2947 PD
52 W
1483 3027 PD
52 W
1539 3077 PD
52 W
1612 3120 PD
52 W
1677 3065 PD
52 W
1755 3058 PD
52 W
1811 3003 PD
52 W
1871 2953 PD
52 W
1940 2879 PD
52 W
1995 2824 PD
52 W
2078 2817 PD
52 W
2138 2793 PD
52 W
2207 2774 PD
52 W
2267 2768 PD
52 W
2332 2731 PD
52 W
2410 2675 PD
52 W
2465 2614 PD
52 W
2525 2540 PD
52 W
2590 2521 PD
52 W
2650 2441 PD
52 W
2723 2398 PD
52 W
2788 2348 PD
52 W
2857 2342 PD
52 W
2917 2286 PD
gs 767 326 4574 3546 rc
DA
c8
143 124 106 98 124 99 138 105 102 43 64 13 65 -13 101 -49 
171 -93 78 -43 4231 1533 11 MP stroke
c9
134 105 138 93 134 86 115 56 148 6 133 -25 157 -37 4360 1700 8 MP stroke
c10
46 56 46 49 51 25 133 43 134 37 226 37 4664 2293 7 MP stroke
SO
6 w
gr

6 w
c10
1 sg
0 750 2184 0 0 -750 950 1100 4 MP
PP
-2184 0 0 750 2184 0 0 -750 950 1100 5 MP stroke
4 w
DO
SO
6 w
0 sg
 950  350 mt 3134  350 L
 950 1100 mt 3134 1100 L
3134 1100 mt 3134  350 L
 950 1100 mt  950  350 L
 950 1100 mt 3134 1100 L
 950 1100 mt  950  350 L
 950  350 mt 3134  350 L
 950 1100 mt 3134 1100 L
3134 1100 mt 3134  350 L
 950 1100 mt  950  350 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

1596  507 mt 
(historical demand) s
gs 950 350 2185 751 rc
24 w
gr

24 w
gs 1103 265 389 389 rc
56 W
1297 459 PD
gr

gs 950 350 2185 751 rc
gr

1596  684 mt 
(exponential fitting) s
gs 950 350 2185 751 rc
c8
496 0 1049 636 2 MP stroke
gr

c8
0 sg
1596  861 mt 
(linear fitting) s
gs 950 350 2185 751 rc
c9
496 0 1049 813 2 MP stroke
gr

c9
0 sg
1596 1038 mt 
(invariable demand) s
gs 950 350 2185 751 rc
c10
496 0 1049 990 2 MP stroke
6 w
gr

6 w
c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
